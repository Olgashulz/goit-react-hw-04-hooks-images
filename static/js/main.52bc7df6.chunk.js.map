{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/Loader/Loader.js","components/ErrorResponse/ErrorResponse.js","servises/app.js","App.js","index.js"],"names":["Searchbar","onSubmitApp","removeImagesApp","resetStateApp","useState","inputValue","setInputValue","className","href","onClick","onSubmit","event","preventDefault","trim","toast","error","type","value","onChange","currentTarget","toLowerCase","placeholder","proTotypes","PropTypes","func","isRequired","removeImages","resetState","ImageGalleryItem","onToggle","images","map","item","largeImageURL","src","webformatURL","alt","tags","id","array","ImageGallery","onOpen","Button","onLoadMore","modalRoot","document","querySelector","Modal","children","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","target","toggleModal","LoaderFnc","color","height","width","timeout","ErrorResponse","message","console","log","Error","string","fetchImages","page","a","fetch","then","response","ok","json","Promise","reject","dataImages","hits","Status","App","setImages","setPage","showModal","setShowModal","setError","status","setStatus","largeImage","setLargeImage","res","length","prevState","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.52bc7df6.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nexport default function Searchbar({ onSubmitApp, removeImagesApp, resetStateApp }) {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputValueChange = event => {\r\n    resetStateApp();\r\n\r\n    setInputValue(event.currentTarget.value.toLowerCase());\r\n\r\n  };\r\n\r\n  const handleOnSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (inputValue.trim() === '') {\r\n      return toast.error('Please enter keyword.');\r\n    }\r\n    onSubmitApp(inputValue);\r\n    removeImagesApp();\r\n    // setInputValue('');\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <a href=\"#\" onClick={() => resetStateApp()} className=\"link\">\r\n        <h1 className=\"Title\">Image Gallery</h1>\r\n      </a>\r\n      <form className=\"SearchForm\" onSubmit={handleOnSubmit}>\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={handleInputValueChange}\r\n          // autocomplete=\"off\"\r\n          // autofocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.proTotypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  removeImages: PropTypes.func.isRequired,\r\n  resetState: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ onToggle, images }) => {\r\n  return (\r\n    <>\r\n      {images.map(item => {\r\n        return (\r\n          <li\r\n            onClick={() => onToggle(item.largeImageURL)}\r\n            className=\"ImageGalleryItem\"\r\n            key={item.id}\r\n          >\r\n            <img\r\n              src={item.webformatURL}\r\n              alt={item.tags[0]}\r\n              className=\"ImageGalleryItem-image\"\r\n              data-largeimage={item.largeImageURL}\r\n            />\r\n          </li>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.proTotypes = {\r\n  onToggle: PropTypes.func.isRequired,\r\n  images: PropTypes.array.isRequired,\r\n};\r\n","import ImageGalleryItem from '../ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ images, onOpen }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      <ImageGalleryItem images={images} onToggle={onOpen} />\r\n    </ul>\r\n  );\r\n};\r\nexport default ImageGallery;\r\n\r\nImageGallery.proTotypes = {\r\n  onOpen: PropTypes.func.isRequired,\r\n  images: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Button({ onLoadMore }) {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onLoadMore}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.proTotypes = {\r\n  onLoadMore: PropTypes.func.isRequired,\r\n};\r\n","import { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({ children, onClose }) {\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  })\r\n\r\n  const handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      onClose(event);\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose(event);\r\n    }\r\n  };\r\n\r\n\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\r\n      <div className=\"Modal\">{children}</div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\nModal.proTotypes = {\r\n  toggleModal: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function LoaderFnc() {\r\n  return (\r\n    <div className=\"loaderContainer\">\r\n      <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#000\"\r\n        height={50}\r\n        width={50}\r\n        timeout={3000}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function ErrorResponse({ message }) {\n  console.log('Ошибка');\n  return <h3>{message}</h3>;\n}\n\nError.proTotypes = {\n  message: PropTypes.string.isRequired,\n};\n","export const fetchImages = async (inputValue, page) => {\r\n  const dataImages = await fetch(\r\n    `https://pixabay.com/api/?key=10507999-623e060cae639baa9b9819f90&q=${inputValue}&page=${page}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject({\r\n      error: new Error(`Your request ${inputValue} did not return any results`),\r\n    });\r\n  });\r\n  return dataImages.hits;\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport Searchbar from './components/Searchbar';\r\nimport ImageGallery from './components/ImageGallery';\r\nimport Button from './components/Button';\r\nimport Modal from './components/Modal';\r\nimport Loader from './components/Loader';\r\nimport ErrorResponse from './components/ErrorResponse';\r\nimport { fetchImages } from './servises/app';\r\n\r\nconst Status = {\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n}\r\n\r\nexport default function App() {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [images, setImages] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState('resolved');\r\n  const [largeImage, setLargeImage] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (!inputValue) {\r\n      return;\r\n    }\r\n\r\n    setStatus(Status.PENDING);\r\n    fetchImages(inputValue, page)\r\n      .then(res => {\r\n        if (res.length < 1 && page !== 1) {\r\n          return toast.error(`Sorry, that's all there is to your request. `);\r\n        }\r\n        if (res.length < 1) {\r\n          return toast.error('Sorry, no results were found.');\r\n        }\r\n        setImages(prevState =>\r\n          [...prevState, ...res],\r\n        );\r\n        setStatus(Status.RESOLVED);\r\n      })\r\n      .catch((error) => { setError(error); setStatus(Status.REJECTED) })\r\n      .finally(() => {\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n      })\r\n\r\n  }, [inputValue, page])\r\n\r\n\r\n  const removeImages = () => {\r\n    setImages([]);\r\n  };\r\n\r\n  const resetState = () => {\r\n    setInputValue('');\r\n    setImages([]);\r\n    setPage(1);\r\n    setError(null);\r\n  };\r\n\r\n  const toggleModal = largeImage => {\r\n    setShowModal(!showModal);\r\n    setLargeImage(largeImage);\r\n  };\r\n\r\n  const onLoadMore = event => {\r\n    setInputValue(inputValue)\r\n    setPage(page + 1);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Searchbar\r\n        onSubmitApp={setInputValue}\r\n        removeImagesApp={removeImages}\r\n        resetStateApp={resetState}\r\n      />\r\n      {status === 'pending' && <Loader />}\r\n      {status === 'rejected' && <ErrorResponse message={error.message} />}\r\n\r\n      <ImageGallery onOpen={toggleModal} images={images} />\r\n      {images.length > 0 && <Button onLoadMore={onLoadMore} />}\r\n\r\n      {showModal && (\r\n        <Modal onClose={toggleModal}>\r\n          <img src={largeImage} alt={inputValue} className=\"LargeImg\" />\r\n        </Modal>\r\n      )}\r\n      <ToastContainer autoClose={2500} />\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// // If you want to start measuring performance in your app, pass a function\r\n// // to log results (for example: reportWebVitals(console.log))\r\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}